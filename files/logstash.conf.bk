input {
  udp {
    port => 55514
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_source} %{DATA:syslog_service}: %{IPORHOST:httpd_proxyip} %{USER:httpd_ident} %{USER:httpd_auth} \[%{DATA:httpd_timestamp}\] (?:%{WORD:httpd_verb} %{NOTSPACE:httpd_request}(?: HTTP/%{NUMBER:httpd_httpversion})?|%{DATA:httpd_rawrequest}) %{NUMBER:httpd_response} (?:%{NUMBER:httpd_bytes}|-) %{NUMBER:httpd_responsetime} %{IPORHOST:httpd_clientip}" }
      add_field => { "syslog_pri" => "%{syslog_pri}"}
      add_field => { "syslog_timestamp" => "%{syslog_timestamp}"}
      add_field => { "syslog_source" => "%{syslog_source}"}
      add_field => { "syslog_service" => "%{syslog_service}"}
      add_field => { "httpd_proxyip" => "%{httpd_proxyip}"}
      add_field => { "httpd_ident" => "%{httpd_ident}"}
      add_field => { "httpd_auth" => "%{httpd_auth}"}
      add_field => { "httpd_timestamp" => "%{httpd_timestamp}"}
      add_field => { "httpd_verb" => "%{httpd_verb}"}
      add_field => { "httpd_request" => "%{httpd_request}"}
      add_field => { "httpd_httpversion" => "%{httpd_httpversion}"}
      add_field => { "httpd_rawrequest" => "%{httpd_rawrequest}"}
      add_field => { "httpd_response" => "%{httpd_response}"}
      add_field => { "httpd_bytes" => "%{httpd_bytes}"}
      add_field => { "httpd_responsetime" => "%{httpd_responsetime}"}
      add_field => { "httpd_clientip" => "%{httpd_clientip}"}
    }
  }
  geoip {
        source => "clientip"
  }
}

output {
  elasticsearch { host => elk }
}
